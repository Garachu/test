1. Create or select a Cloud Platform project in the Cloud Platform Console and then ensure that project includes an App Engine application: 
	Note: This application should be run in a B4_1G instance class for improved performance.
	Project id: test-endpointframework

2. Check to see if curl is installed, curl is for testing purposes
	Ubuntu terminal : curl -V

3. Update the Cloud SDK and install the Endpoints components:
	gcloud components update

4. Make sure that Cloud SDK (gcloud) is authorized to access your data and services on Google Cloud Platform: 
	gcloud auth login

5. Set the default project to your project ID:
	gcloud config set project test-endpointframework

6. Adding the project ID to the sample API code

	You must add the project ID obtained when you created your Cloud project to the sample's pom.xml before you can deploy the code.

7. Build the Project
	mvn clean package
8. Generating the OpenAPI configuration file
	You use a tool from the Frameworks library to generate an OpenAPI configuration file called openapi.json. This file describes the sample code's REST API.

	invoke the Endpoints Frameworks tool using this command:
		mvn exec:java -DGetSwaggerDoc

9. Deploying the Endpoints configuration
	To deploy the Endpoints configuration, you use Google Service Management, an infrastructure service of Google Cloud Platform that manages other APIs and services, including services created using Cloud Endpoints.

	Deploy the OpenAPI configuration file that was generated in the previous section by invoking the following command:

		gcloud service-management deploy openapi.json

		This creates a new Cloud Endpoints service with the name in the format YOUR_PROJECT_ID.appspot.com. This name is configured in pom.xml and other configuration files included in the sample. Note that when you deploy the API on App Engine, a DNS record is created using the name format PROJECT_ID.appspot.com, which is the fully qualified domain name (FQDN) that you use when you send requests to the API.

10. Running the sample locally
	Set the ENDPOINTS_SERVICE_NAME environment variable to: [YOUR_PROJECT_ID].appspot.com
		export ENDPOINTS_SERVICE_NAME=test-endpointframework.appspot.com

	Acquire new user credentials to use for Application Default Credentials.
		gcloud auth application-default login

	Run the development server:
		mvn appengine:run


11. Deploying the API backend
	So far you have deployed the OpenAPI configuration to Service Management, but you have not yet deployed the code that will serve the API backend. This section walks you through deploying the sample API to App Engine.
	Note: To deploy the API to App Engine you need to have Apache Maven installed.

	Deploy the API implementation code using Maven:
		mvn appengine:deploy